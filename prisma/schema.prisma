generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model product {
  id        BigInt     @id @default(autoincrement())
  name      String?    @db.VarChar(255)
  price     Decimal?   @db.Decimal
  createdAt DateTime   @default(now()) @db.Timestamptz(6)
  updatedAt DateTime   @default(now()) @db.Timestamptz(6)
  plan      plan?      @relation(fields: [planId], references: [id])
  planId    Int?
  userPlans userPlan[]
  reviews   review[]
}

model user {
  id                          BigInt    @id @default(autoincrement())
  name                        String?   @db.VarChar(255)
  email                       String    @unique @db.VarChar(255)
  password                    String?   @db.VarChar(255)
  passwordChangedAt           DateTime? @db.Timestamptz(6)
  passwordResetToken          String?   @db.VarChar(255)
  passwordResetTokenExpiresIn DateTime? @db.Timestamptz(6)
  lang                        String?   @db.VarChar(255)
  roleId                      Int?
  role                        role?     @relation(fields: [roleId], references: [id])
  avatarURL                   String?   @db.VarChar(255)
  active                      Boolean?
  createdAt                   DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt                   DateTime  @default(now()) @db.Timestamptz(6)
  userPlan                    userPlan?
}

model role {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @db.Timestamptz(6)
  users     user[]
}

model plan {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @default(now()) @db.Timestamptz(6)
  products  product[]
}

model userPlan {
  id        Int      @id @default(autoincrement())
  user      user     @relation(fields: [userId], references: [id])
  userId    BigInt   @unique
  product   product  @relation(fields: [productId], references: [id])
  productId BigInt   @unique
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @db.Timestamptz(6)
}

model review {
  id           BigInt   @id @default(autoincrement())
  product      product  @relation(fields: [productId], references: [id])
  productId    BigInt   @unique
  rating       Int      @default(0)
  title        String
  descriptions String
  createdAt    DateTime @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime @default(now()) @db.Timestamptz(6)
}
